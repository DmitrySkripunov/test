{"version":3,"sources":["stores/events.ts","App.tsx","reportWebVitals.ts","stores/characters.ts","stores/index.ts","index.tsx"],"names":["CharacterEvents","__webpack_require__","d","__webpack_exports__","Home","lazy","Promise","all","e","then","bind","Character","App","react_default","a","createElement","react_router","path","element","react","fallback","CircularProgress","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","abortableSearchRequests","Set","store","createStoreon","on","characters","Map","results","count","next","previous","request","inProgress","Search","_ref3","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","isUrl","query","controller","result","wrap","_context","prev","objectDestructuringEmpty","dispatch","UpdateRequest","forEach","abort","clear","AbortController","add","fetch","concat","signal","sent","json","UpdateResults","t0","DOMException","name","abrupt","stop","_x","_x2","apply","this","arguments","Get","_ref5","_callee2","_ref4","url","_context2","length","Update","finish","_x3","_x4","_ref6","character","set","_ref7","_ref8","ReactDOM","createRoot","document","getElementById","render","react_router_dom","storeon_react","Provider","value","src_App"],"mappings":"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","file":"static/js/main.3ef72eac.chunk.js","sourcesContent":["export enum CharacterEvents {\n  Search = \"character/search\",\n  Get = \"character/get\",\n  Update = \"character/update\",\n  UpdateResults = \"character/results/update\",\n  UpdateRequest = \"character/request/update\",\n}\n","import { Route, Routes } from \"react-router-dom\";\nimport React, { lazy, Suspense } from \"react\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst Character = lazy(() => import(\"./pages/Character\"));\n\nfunction App() {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <Suspense fallback={<CircularProgress />}>\n            <Home />\n          </Suspense>\n        }\n      />\n      <Route\n        path=\"character/:id\"\n        element={\n          <Suspense fallback={<CircularProgress />}>\n            <Character />\n          </Suspense>\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StoreonModule } from \"storeon\";\nimport { Character } from \"../types/Character\";\nimport { Request } from \"../types/Request\";\nimport { SearchResult } from \"../types/SearchResult\";\nimport { CharacterEvents } from \"./events\";\n\nexport interface State {\n  characters: Map<string, Character>;\n  results: SearchResult<Character>;\n  request: Request;\n}\n\nexport interface Events {\n  [CharacterEvents.Search]: { query: string; isUrl?: boolean };\n  [CharacterEvents.Get]: string;\n  [CharacterEvents.Update]: Character;\n  [CharacterEvents.UpdateResults]: SearchResult<Character>;\n  [CharacterEvents.UpdateRequest]: Request;\n}\n\nconst abortableSearchRequests: Set<AbortController> = new Set<\n  AbortController\n>();\n\nexport const characters: StoreonModule<State, Events> = (store) => {\n  store.on(\"@init\", () => ({\n    characters: new Map(),\n    results: {\n      count: 0,\n      next: null,\n      previous: null,\n      results: [],\n    },\n    request: { inProgress: false },\n  }));\n\n  store.on(CharacterEvents.Search, async ({}, { isUrl, query }) => {\n    // if (query.length === 0) return;\n\n    store.dispatch(CharacterEvents.UpdateRequest, { inProgress: true });\n\n    try {\n      abortableSearchRequests.forEach((controller) => controller.abort());\n      abortableSearchRequests.clear();\n\n      const controller = new AbortController();\n      abortableSearchRequests.add(controller);\n\n      const result = await fetch(\n        isUrl ? query : `https://swapi.dev/api/people/?search=${query}`,\n        { signal: controller.signal }\n      );\n      const results = await result.json();\n\n      store.dispatch(CharacterEvents.UpdateResults, results);\n      store.dispatch(CharacterEvents.UpdateRequest, { inProgress: false });\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") return;\n\n      store.dispatch(CharacterEvents.UpdateRequest, { inProgress: false });\n    }\n  });\n\n  store.on(CharacterEvents.Get, async ({}, url) => {\n    if (url.length === 0) return;\n\n    store.dispatch(CharacterEvents.UpdateRequest, { inProgress: true });\n\n    try {\n      const result = await fetch(url);\n      const results = await result.json();\n\n      store.dispatch(CharacterEvents.Update, results);\n    } finally {\n      store.dispatch(CharacterEvents.UpdateRequest, { inProgress: false });\n    }\n  });\n\n  store.on(CharacterEvents.Update, ({ characters }, character) => {\n    characters.set(character.url, character);\n    return { characters };\n  });\n\n  store.on(CharacterEvents.UpdateResults, ({ characters }, results) => {\n    results.results.forEach((character) => {\n      characters.set(character.url, character);\n    });\n    return { results, characters };\n  });\n  store.on(CharacterEvents.UpdateRequest, ({}, request) => ({ request }));\n};\n","import { createStoreon } from \"storeon\";\nimport { characters } from \"./characters\";\n\nconst store = createStoreon([characters]);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./stores\";\nimport { StoreContext } from \"storeon/react\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n    <BrowserRouter>\n      <StoreContext.Provider value={store}>\n        <App />\n      </StoreContext.Provider>\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}